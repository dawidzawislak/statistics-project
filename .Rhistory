library(smoof)
library(ecr)
library(ggplot2)
library(kableExtra)
set.seed(12345)
alpine01_2D <- makeAlpine01Function(2)
alpine01_10D <- makeAlpine01Function(10)
alpine01_20D <- makeAlpine01Function(20)
rosenbrock_2D <- makeRosenbrockFunction(2)
rosenbrock_10D <- makeRosenbrockFunction(10)
rosenbrock_20D <- makeRosenbrockFunction(20)
getRandomPoint <- function(dimensions, domain){
rndPoint <- replicate(n=dimensions, runif(1,-domain,domain))
return(rndPoint)
}
performPRS <- function(numberOfExec, givenFunc, pointsGenerator, dimensions, domain){
generatedPoints <- replicate(numberOfExec, pointsGenerator(dimensions, domain))
pointsMat <- matrix(generatedPoints, nrow = numberOfExec)
res <- apply(pointsMat, 1, givenFunc)
return(min(res))
}
alpine01_2D_result_PRS <- replicate(100, performPRS(1000, alpine01_2D, getRandomPoint, 2, 10))
alpine01_10D_result_PRS <- replicate(100, performPRS(1000, alpine01_10D, getRandomPoint, 10, 10))
alpine01_20D_result_PRS <- replicate(100, performPRS(1000, alpine01_20D, getRandomPoint, 20, 10))
rosenbrock_2D_result_PRS <- replicate(100, performPRS(1000, rosenbrock_2D, getRandomPoint, 2, 30))
rosenbrock_10D_result_PRS <- replicate(100, performPRS(1000, rosenbrock_10D, getRandomPoint, 10, 30))
rosenbrock_20D_result_PRS <- replicate(100, performPRS(1000, rosenbrock_20D, getRandomPoint, 20, 30))
mean_alpine01_2D_result_PRS <- mean(alpine01_2D_result_PRS)
mean_alpine01_10D_result_PRS <- mean(alpine01_10D_result_PRS)
mean_alpine01_20D_result_PRS <- mean(alpine01_20D_result_PRS)
mean_rosenbrock_2D_result_PRS <- mean(rosenbrock_2D_result_PRS)
mean_rosenbrock_10D_result_PRS <- mean(rosenbrock_10D_result_PRS)
mean_rosenbrock_20D_result_PRS <- mean(rosenbrock_20D_result_PRS)
performGA <- function(reapet, numberOfExec, givenFunc, dimensions, domain, numParents, numChildren) {
maxEvals <- list(stopOnEvals(numberOfExec))
lower <- replicate(dimensions, -domain)
upper <- replicate(dimensions, domain)
result <- replicate(reapet, ecr(
givenFunc,
n.dim = dimensions,
lower = lower,
upper = upper,
minimize = TRUE,
representation = "float",
mu = numParents,
lambda = numChildren,
terminators = maxEvals,
mutator = setup(mutGauss, lower=lower, upper=upper)
)$best.y)
return(result)
}
alpine01_2D_result_GA <- performGA(100, 1000, alpine01_2D, 2, 10, 50L, 25L)
alpine01_10D_result_GA <- performGA(100, 1000, alpine01_10D, 10, 10, 50L, 25L)
alpine01_20D_result_GA <- performGA(100, 1000, alpine01_20D, 20, 10, 50L, 25L)
rosenbrock_2D_result_GA <- performGA(100, 1000, rosenbrock_2D, 2, 30, 50L, 25L)
rosenbrock_10D_result_GA <- performGA(100, 1000, rosenbrock_10D, 10, 30, 50L, 25L)
rosenbrock_20D_result_GA <- performGA(100, 1000, rosenbrock_20D, 20, 30, 50L, 25L)
mean_alpine01_2D_result_GA <- mean(alpine01_2D_result_GA)
mean_alpine01_10D_result_GA <- mean(alpine01_10D_result_GA)
mean_alpine01_20D_result_GA <- mean(alpine01_20D_result_GA)
mean_rosenbrock_2D_result_GA <- mean(rosenbrock_2D_result_GA)
mean_rosenbrock_10D_result_GA <- mean(rosenbrock_10D_result_GA)
mean_rosenbrock_20D_result_GA <- mean(rosenbrock_20D_result_GA)
visualizeResults <- function(vec1, vec2, mean1, mean2, name1, name2, minimum, binw1, binw2){
df <- data.frame(
type=factor(rep(c(name1, name2), each=100)),
result=round(c(vec1, vec2))
)
df1 <- data.frame(
type=factor(rep(name1)),
values = vec1)
df2 <- data.frame(
type=factor(rep(name2)),
values = vec2)
p1 <- ggplot(df1, aes(x=values))+
geom_histogram(binwidth = binw1, color="black", fill="blue", alpha=0.4)+
geom_vline(xintercept=mean1, color="red", linetype="dashed", size=1)+
geom_vline(xintercept=minimum, color='darkgreen', size=1)+
ggtitle(name1)
p2 <- ggplot(df2, aes(x=values))+
geom_histogram(binwidth = binw2, color="black", fill="blue", alpha=0.4)+
geom_vline(xintercept=mean2, color="red", linetype="dashed", size=1)+
geom_vline(xintercept=minimum, color='darkgreen', size=1)+
ggtitle(name2)
vp <- ggplot(df, aes(x=result , y=type)) + geom_violin(trim=TRUE) + stat_summary(fun = "mean", geom = "point", aes(color = "Mean")) + scale_colour_manual(values = c("red", "blue"), name = "")
plot(p1)
plot(p2)
plot(vp)
}
visualizeResults(alpine01_2D_result_PRS, alpine01_2D_result_GA, mean_alpine01_2D_result_PRS, mean_alpine01_2D_result_GA, "Alpine01 2D PRS", "Alpine01 2D GA", 0, 0.017, 0.0012)
visualizeResults(alpine01_10D_result_PRS, alpine01_10D_result_GA, mean_alpine01_10D_result_PRS, mean_alpine01_10D_result_GA,"Alpine01 10D PRS", "Alpine01 10D GA", 0, 0.75, 0.35)
visualizeResults(alpine01_20D_result_PRS, alpine01_20D_result_GA, mean_alpine01_20D_result_PRS, mean_alpine01_20D_result_GA, "Alpine01 20D PRS", "Alpine01 20D GA", 0, 2, 0.75)
visualizeResults(rosenbrock_2D_result_PRS, rosenbrock_2D_result_GA, mean_rosenbrock_2D_result_PRS, mean_rosenbrock_2D_result_GA, "Rosenbrock 2D PRS", "Rosenbrock 2D GA", 0, 4, 0.4)
visualizeResults(rosenbrock_10D_result_PRS, rosenbrock_10D_result_GA, mean_rosenbrock_10D_result_PRS, mean_rosenbrock_10D_result_GA, "Rosenbrock 10D PRS", "Rosenbrock 10D GA", 0, 1000000, 500)
visualizeResults(rosenbrock_20D_result_PRS, rosenbrock_20D_result_GA, mean_rosenbrock_20D_result_PRS, mean_rosenbrock_20D_result_GA, "Rosenbrock 20D PRS", "Rosenbrock 20D GA", 0, 6000000, 3000)
df <- data.frame(
Rosenbrock2D = c(mean_rosenbrock_2D_result_PRS, mean_rosenbrock_2D_result_GA, abs(mean_rosenbrock_2D_result_PRS -mean_rosenbrock_2D_result_GA ),0),
Rosenbrock10D = c(mean_rosenbrock_10D_result_PRS, mean_rosenbrock_10D_result_GA, abs(mean_rosenbrock_10D_result_PRS - mean_rosenbrock_10D_result_GA),0),
Rosenbrock20D = c(mean_rosenbrock_20D_result_PRS, mean_rosenbrock_20D_result_GA, abs(mean_rosenbrock_20D_result_PRS - mean_rosenbrock_20D_result_GA),0),
Alpine01_2D = c(mean_alpine01_2D_result_PRS, mean_alpine01_2D_result_GA, abs(mean_alpine01_2D_result_PRS - mean_alpine01_2D_result_GA),0),
Alpine01_10D = c(mean_alpine01_10D_result_PRS, mean_alpine01_10D_result_GA, abs(mean_alpine01_10D_result_PRS - mean_alpine01_10D_result_GA), 0),
Alpine01_20D = c(mean_alpine01_20D_result_PRS, mean_alpine01_20D_result_GA, abs(mean_alpine01_20D_result_PRS - mean_alpine01_20D_result_GA), 0)
)
row.names(df) <- c("PRS", "GA", "Różnica","Globalne minimum")
kable(df) %>%
kable_styling(font_size = 12, position = "center", latex_options = c("striped", "hold_position")) %>%
row_spec(0, bold = TRUE, color = "white", background = "gray")
rb2dr = t.test(rosenbrock_2D_result_PRS,rosenbrock_2D_result_GA, paired = TRUE)
rb10dr = t.test(rosenbrock_10D_result_PRS,rosenbrock_10D_result_GA, paired = TRUE)
rb20dr = t.test(rosenbrock_20D_result_PRS,rosenbrock_20D_result_GA, paired = TRUE)
alpine2dt = t.test(alpine01_2D_result_PRS, alpine01_2D_result_GA, paired = TRUE)
alpine10dt = t.test(alpine01_10D_result_PRS, alpine01_10D_result_GA, paired = TRUE)
alpine20dt = t.test(alpine01_20D_result_PRS, alpine01_20D_result_GA, paired = TRUE)
print(rb2dr)
print(rb10dr)
print(rb20dr)
print(alpine2dt)
print(alpine10dt)
print(alpine20dt)
df <- data.frame(
Rosenbrock2D = c(paste(round(rb2dr$conf.int[1:2], 3), collapse =  " - "), rb2dr$p.value, round(rb2dr$estimate,3)),
Rosenbrock10D = c(paste(round(rb10dr$conf.int[1:2],3), collapse  = " - "), rb10dr$p.value, round(rb10dr$estimate,3)),
Rosenbrock20D = c(paste(round(rb20dr$conf.int[1:2],3), collapse  = " - "), rb20dr$p.value, round(rb20dr$estimate,3)),
Alpine01_2D = c(paste(round(alpine2dt$conf.int[1:2],3), collapse  = " - "), alpine2dt$p.value, round(alpine2dt$estimate,3)),
Alpine01_10D = c(paste(round(alpine10dt$conf.int[1:2],3), collapse  = " - "), alpine10dt$p.value, round(alpine10dt$estimate,3)),
Alpine01_20D = c(paste(round(alpine20dt$conf.int[1:2],3), collapse  = " - "), alpine20dt$p.value, round(alpine20dt$estimate,3))
)
row.names(df) <- c("Przedział ufności [95%]", "Wartość P", "Różnica w średniej")
kable(df) %>%
kable_styling(font_size = 9.5, position = "center", latex_options = c("striped", "hold_position")) %>%
row_spec(0, bold = TRUE, color = "white", background = "gray")
